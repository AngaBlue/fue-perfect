// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.

import { initFormatters } from './formatters';
import type { Locales, Translations } from './i18n-types';
import { loadedFormatters, loadedLocales, locales } from './i18n-util';

import en from './en';
import es from './es';
import fr from './fr';
import nl from './nl';
import tr from './tr';

const localeTranslations = {
	en,
	es,
	fr,
	nl,
	tr
};

export const loadLocale = (locale: Locales): void => {
	if (loadedLocales[locale]) return;

	loadedLocales[locale] = localeTranslations[locale] as unknown as Translations;
	loadFormatters(locale);
};

export const loadAllLocales = (): void => locales.forEach(loadLocale);

export const loadFormatters = (locale: Locales): void => void (loadedFormatters[locale] = initFormatters(locale));
